services:
  traefik:
    image: "traefik:v3.3"
    restart: unless-stopped
    container_name: "traefik"
    command:
      # - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      #- "--certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.myresolver.acme.email=dev@oliverbutler.uk"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "443:443"
      - "8080:8080"
    volumes:
      - "./letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  backend:
    image: ghcr.io/oliverbutler/omo:latest
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    deploy:
      mode: replicated
      replicas: 2
      update_config:
        parallelism: 1
        delay: 10s
        order: start-first
      restart_policy:
        condition: on-failure
        max_attempts: 3
        window: 120s
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6900/health"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`oliverbutler.uk`)"
      - "traefik.http.routers.backend.entrypoints=websecure"
      - "traefik.http.routers.backend.tls.certresolver=myresolver"
      - "traefik.http.services.backend.loadbalancer.server.port=6900"
      - "traefik.http.services.backend.loadbalancer.healthcheck.path=/health"
      - "traefik.http.services.backend.loadbalancer.healthcheck.interval=30s"
      - "traefik.http.services.backend.loadbalancer.healthcheck.timeout=5s"
      - "traefik.http.services.backend.loadbalancer.sticky.cookie=true"
      - "traefik.http.services.backend.loadbalancer.sticky.cookie.name=backend_sticky"
      - "traefik.http.services.backend.loadbalancer.sticky.cookie.secure=true"
    environment:
      DB_HOST: db
      DB_NAME: oliverbutler
      DB_USER: postgres
      DB_PASSWORD: password
      DB_PORT: 5432
      BASE_URL: https://oliverbutler.uk
      ENV: production
      AUTH_GITHUB_CLIENT_ID: ${AUTH_GITHUB_CLIENT_ID}
      AUTH_GITHUB_CLIENT_SECRET: ${AUTH_GITHUB_CLIENT_SECRET}
      STORAGE_ACCESS_KEY_ID: ${STORAGE_ACCESS_KEY_ID}
      STORAGE_SECRET_ACCESS_KEY: ${STORAGE_SECRET_ACCESS_KEY}
      STORAGE_ENDPOINT: https://b0bd4bf4ecaf861687a5f5a08fde654c.r2.cloudflarestorage.com

  db:
    image: postgres:16.4
    restart: unless-stopped
    environment:
      - POSTGRES_DB=oliverbutler
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - target: 5432
        published: 5432
        mode: host
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  pgdata:
